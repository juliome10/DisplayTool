# encoding: utf-8

module NavigationHelpers
  # Maps a name to a path. Used by the
  #
  #   When /^I go to (.+)$/ do |page_name|
  #
  # step definition in web_steps.rb
  #
  def path_to(page_name)
    case page_name

    when /^the home\s?page$/ then '/'
    when /^paxina principal$/ then '/' 
    when /^paxina de formatos$/ then '/formatos'
    when /^paxina de dispositivos lóxicos$/ then '/dispositivoloxicos'
    when /^paxina de detalles do formato con nome "([^\"]*)"/ then
      formato = Formato.find_by_nome($1)
      formato_path(formato)
    when /^paxina de crear formato$/ then '/formatos/new'
    when /^paxina de crear dispositivo lóxico$/ then '/dispositivoloxicos/new'
    when /^paxina de crear campo$/ then '/campos/new'
    when /paxina de editar o formato con nome "([^\"]*)"/ then 
      id = Formato.find_by_nome($1)
      edit_formato_path(id)
 
    # Add more mappings here.
    # Here is an example that pulls values out of the Regexp:
    #
    #   when /^(.*)'s profile page$/i
    #     user_profile_path(User.find_by_login($1))

    else
      begin
        page_name =~ /^the (.*) page$/
        path_components = $1.split(/\s+/)
        self.send(path_components.push('path').join('_').to_sym)
      rescue NoMethodError, ArgumentError
        raise "Can't find mapping from \"#{page_name}\" to a path.\n" +
          "Now, go and add a mapping in #{__FILE__}"
      end
    end
  end
end

World(NavigationHelpers)
